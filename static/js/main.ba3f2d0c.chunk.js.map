{"version":3,"sources":["reducers/index.js","components/Voice/useStyles.js","components/Voice/index.js","libraries/database.js","hooks/useItemUpdater.js","components/ShopList/useLogic.js","components/ShopList/useStyles.js","components/ShopList/index.js","components/Input/useStyles.js","models/Item.js","components/Input/useLogic.js","components/Input/index.js","components/MenuDrawer/useStyles.js","components/MenuDrawer/index.js","components/Dashboard/useStyles.js","components/Dashboard/useLogic.js","components/Dashboard/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["items","state","reducer","value","action","payload","Array","reduce","acc","item","id","filter","name","isDrawerOpen","makeStyles","theme","root","display","button","margin","spacing","marginLeft","Voice","React","memo","classes","useStyles","className","Fab","size","Mic","database","Dexie","version","stores","settings","useLogic","dispatchItems","useStore","addItem","useCallback","put","useState","filteredItems","setFilteredItems","useItemUpdater","useEffect","regExp","RegExp","Object","values","match","updateStock","event","currentTarget","getAttribute","inStock","paddingTop","flex","overflow","ShopList","List","map","ListItem","key","onClick","Checkbox","disableRipple","checked","ListItemText","primary","ListItemSecondaryAction","IconButton","MoreVert","alignItems","padding","input","marginRight","addIcon","menuIcon","createItem","toLowerCase","setFilter","useItempUpdater","toggleOpen","updateFilter","target","updateItem","Input","Paper","Menu","InputBase","onChange","placeholder","disabled","AddCircle","fontSize","title","MenuDrawer","isOpen","Drawer","open","onClose","Typography","variant","Divider","ListItemIcon","Edit","typography","body1","position","height","width","flexDirection","a","toArray","initialize","Dashboard","createMuiTheme","factor","App","reducers","MuiThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qnCAoBe,OACXA,MAAO,CACHC,MAAO,GACPC,QAvBR,SAAsBD,EAAOE,GAAQ,IACzBC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OAAQD,GACJ,IAAK,MACD,OAAIC,aAAmBC,MACLD,EAAQE,OAAO,SAACC,EAAKC,GAC/B,OAAO,EAAP,GAAYD,EAAZ,eAAkBC,EAAKC,GAAKD,KAC7BR,GAEA,KAAYA,EAAZ,eAAoBI,EAAQK,GAAKL,IAE5C,IAAK,QAAU,IAAD,EACDA,EAAQK,GAAkCT,EADzC,GAEV,OAFU,YACyCA,EADzC,YAId,QACI,OAAOA,KASfU,OAAQ,CACJV,MAAO,CAAEW,KAAM,IACfV,QAAS,SAACD,EAAOE,GAAR,YAAwBF,EAAxB,GAAkCE,KAE/CU,aAAc,CACVZ,OAAO,EACPC,QAAS,SAAAD,GAAK,OAAKA,K,wBC7BZa,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMK,QAAQ,GACtBC,WAAY,WCSLC,EAZDC,IAAMC,KAAK,WACrB,IAAMC,EAAUC,IAEhB,OACI,yBAAKC,UAAWF,EAAQT,MACpB,kBAACY,EAAA,EAAD,CAAKD,UAAWF,EAAQP,OAAQW,KAAK,SACjC,kBAACC,EAAA,EAAD,U,0ECTVC,EAAW,I,MAAIC,GAAM,YAC3BD,EAASE,QAAQ,GAAGC,OAAO,CACvBlC,MAAO,KACPmC,SAAU,OAGCJ,QCOAK,MAXf,WACI,IAAMC,EAAgBC,mBAAS,SAAS,GAOxC,MAAO,CAAEC,QALOC,sBAAY,SAAA/B,GACxBsB,EAAS/B,MAAMyC,IAAIhC,GACnB4B,EAAc,CAAEjC,OAAQ,MAAOC,QAASI,KACzC,CAAC4B,M,4NCkBOD,MAxBf,WAAqB,IAAD,EACCE,mBAAS,UAAnB3B,EADS,sBAEA2B,mBAAS,SAAlBtC,EAFS,sBAG0B0C,mBAAS,IAHnC,mBAGTC,EAHS,KAGMC,EAHN,KAIRL,EAAYM,IAAZN,QAiBR,OAfAO,oBAAU,WACN,IAAMC,EAAS,IAAIC,OAAOrC,EAAOC,KAAM,KACjC+B,EAAgBM,OAAOC,OAAOlD,GAAOO,OAAO,SAACC,EAAKC,GACpD,OAAIA,EAAKG,KAAKuC,MAAMJ,GAAe,GAAN,mBAAWvC,GAAX,CAAgBC,IACtCD,GACR,IAEHoC,EAAiBD,IAClB,CAAC3C,EAAOW,IAOJ,CAAEX,MAAO2C,EAAeS,YALXZ,sBAAY,SAAAa,GAC5B,IAAM5C,EAAOT,EAAMqD,EAAMC,cAAcC,aAAa,SACpDhB,E,qVAAQ,IAAK9B,EAAN,CAAY+C,SAAU/C,EAAK+C,YACnC,CAACxD,EAAOuC,MCrBAzB,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFyC,WAAY,EACZC,KAAM,EACNC,SAAU,WC2BHC,EA3BErC,IAAMC,KAAK,WACxB,IAAMC,EAAUC,IADc,EAECU,IAAvBpC,EAFsB,EAEtBA,MAAOoD,EAFe,EAEfA,YAEf,OACI,kBAACS,EAAA,EAAD,CAAMlC,UAAWF,EAAQT,MACpBhB,EAAM8D,IAAI,SAAArD,GAAI,OACX,kBAACsD,EAAA,EAAD,CACI7C,QAAM,EACN8C,IAAKvD,EAAKC,GACVE,KAAMH,EAAKC,GACXuD,QAASb,GACT,kBAACc,EAAA,EAAD,CACIC,eAAa,EACbC,QAAS3D,EAAK+C,UAClB,kBAACa,EAAA,EAAD,CAAcC,QAAS7D,EAAKG,OAC5B,kBAAC2D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,c,oCCtBb3D,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,QAAS,OACTyD,WAAY,SACZvD,OAAQJ,EAAMK,QAAQ,GACtBuD,QAAS5D,EAAMK,QAAQ,IAE3BwD,MAAO,CACHlB,KAAM,EACNrC,WAAYN,EAAMK,QAAQ,GAC1ByD,YAAa9D,EAAMK,QAAQ,IAE/B0D,QAAS,CACLH,QAAS5D,EAAMK,QAAQ,IAE3B2D,SAAU,CACNJ,QAAS5D,EAAMK,QAAQ,OCVhB4D,MARf,YAA+B,IAATpE,EAAQ,EAARA,KAClB,MAAO,CACHF,GAAIE,EAAKqE,cACTrE,OACA4C,SAAS,ICkBFpB,MAjBf,WAAqB,IAAD,EACYE,mBAAS,UADrB,mBACT3B,EADS,KACDuE,EADC,KAER3C,EAAY4C,IAAZ5C,QACF6C,EAAa9C,mBAAS,gBAAgB,GAEtC+C,EAAe7C,sBAAY,SAAAa,GAC7B6B,EAAU,CAAEtE,KAAMyC,EAAMiC,OAAOnF,SAChC,CAAC+E,IAEEK,EAAa/C,sBAAY,WAC3BD,EAAQyC,EAAW,CAAEpE,KAAMD,EAAOC,QAClCsE,EAAU,CAAEtE,KAAM,MACnB,CAACsE,EAAW3C,EAAS5B,IAExB,MAAO,CAAEA,SAAQ0E,eAAc9C,QAASgD,EAAYH,eCSzCI,EAtBDjE,IAAMC,KAAK,WACrB,IAAMC,EAAUC,IADW,EAE2BU,IAA9CzB,EAFmB,EAEnBA,OAAQ0E,EAFW,EAEXA,aAAc9C,EAFH,EAEGA,QAAS6C,EAFZ,EAEYA,WAC/BxE,EAASD,EAATC,KAER,OACI,kBAAC6E,EAAA,EAAD,CAAO9D,UAAWF,EAAQT,MACtB,kBAACwD,EAAA,EAAD,CAAY7C,UAAWF,EAAQsD,SAAUd,QAASmB,GAC9C,kBAACM,EAAA,EAAD,OAEJ,kBAACC,EAAA,EAAD,CACIxF,MAAOS,EACPgF,SAAUP,EACV1D,UAAWF,EAAQmD,MACnBiB,YAAY,aAChB,kBAACrB,EAAA,EAAD,CAAYP,QAAS1B,EAASuD,UAAWlF,EAAMe,UAAWF,EAAQqD,SAC9D,kBAACiB,EAAA,EAAD,CAAWC,SAAS,c,4CCpBrBlF,cAAW,SAAAC,GAAK,MAAK,CAChCkF,MAAO,CACHtB,QAAS5D,EAAMK,QAAQ,OCoBhB8E,EAlBI3E,IAAMC,KAAK,WAAO,IAAD,EACHc,mBAAS,gBADN,mBACzB6D,EADyB,KACjBf,EADiB,KAE1B3D,EAAUC,IAEhB,OACI,kBAAC0E,EAAA,EAAD,CAAQC,KAAMF,EAAQG,QAAS,kBAAMlB,MACjC,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,KAAK7E,UAAWF,EAAQwE,OAA5C,aACA,kBAACQ,EAAA,EAAD,MACA,kBAAC5C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAU7C,QAAM,GACZ,kBAACwF,EAAA,EAAD,KAAc,kBAACC,EAAA,EAAD,OACd,kBAACtC,EAAA,EAAD,CAAcC,QAAQ,c,ojBCf3BxD,mBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK,MACED,EAAM6F,WAAWC,MADpB,CAEAC,SAAU,WACVC,OAAQ,OACRC,MAAO,OACP/F,QAAS,OACTgG,cAAe,c,6BCQR7E,OAbf,WACI,IAAMC,EAAgBC,mBAAS,SAAS,GAExCQ,oBAAU,WAAM,6CACZ,6BAAAoE,EAAA,qEACwBnF,EAAS/B,MAAMmH,UADvC,OACUnH,EADV,OAEIqC,EAAc,CAAEjC,OAAQ,MAAOC,QAASL,IAF5C,0CADY,uBAAC,WAAD,wBAMZoH,IACD,CAAC/E,KCQOgF,GAdG9F,IAAMC,KAAK,WACzB,IAAMC,EAAUC,KAGhB,OAFAU,KAGI,yBAAKT,UAAWF,EAAQT,MACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCXND,GAAQuG,YAAe,CACzBlG,QAAS,SAAAmG,GAAM,gBAAO,GAAMA,EAAb,UAYJC,GATH,kBACR,kBAAC,QAAD,CAAOC,SAAUA,GACb,kBAACC,EAAA,EAAD,CAAkB3G,MAAOA,IACrB,kBAAC4G,EAAA,EAAD,MACA,kBAAC,GAAD,SCFNC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7E,MACvB,2DAsCN,SAAS8E,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzI,QACfmI,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDiB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,aAAwB3B,OAAOC,SAAS2B,MACpDC,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,aAAN,sBAEP7B,KAgEV,SAAiCM,EAAOC,GAEtC0B,MAAM3B,GACHK,KAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BT,OAAOC,SAASuC,aAKpBrC,GAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,GAAgBC,EAAOC,MC3C/BE,K","file":"static/js/main.ba3f2d0c.chunk.js","sourcesContent":["function itemsReducer(state, value) {\n    const { action, payload } = value\n    switch (action) {\n        case \"set\": {\n            if (payload instanceof Array) {\n                const items = payload.reduce((acc, item) => {\n                    return { ...acc, [item.id]: item }\n                }, state)\n                return items\n            } else return { ...state, [payload.id]: payload }\n        }\n        case \"unset\": {\n            const { [payload.id]: deleted, ...updatedState } = state\n            return updatedState\n        }\n        default:\n            return state\n    }\n}\n\nexport default {\n    items: {\n        state: {},\n        reducer: itemsReducer,\n    },\n    filter: {\n        state: { name: \"\" },\n        reducer: (state, value) => ({ ...state, ...value })\n    },\n    isDrawerOpen: {\n        state: false,\n        reducer: state => !state\n    }\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n    },\n    button: {\n        margin: theme.spacing(2),\n        marginLeft: \"auto\"\n    }\n}))","import React from \"react\"\nimport { Fab } from \"@material-ui/core\"\nimport { Mic } from \"@material-ui/icons\"\nimport useStyles from \"./useStyles\"\n\nconst Voice = React.memo(() => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Fab className={classes.button} size=\"small\">\n                <Mic />\n            </Fab>\n        </div>\n    )\n})\n\nexport default Voice","import Dexie from \"dexie\"\n\nconst database = new Dexie(\"Database\")\ndatabase.version(1).stores({\n    items: \"id\",\n    settings: \"id\",\n})\n\nexport default database\n","import { useCallback } from \"react\"\nimport { useStore } from \"eztore\"\nimport database from \"libraries/database\"\n\nfunction useLogic() {\n    const dispatchItems = useStore(\"items\", true)\n\n    const addItem = useCallback(item => {\n        database.items.put(item)\n        dispatchItems({ action: \"set\", payload: item })\n    }, [dispatchItems])\n\n    return { addItem }\n}\n\nexport default useLogic","import { useEffect, useCallback, useState } from \"react\"\nimport { useStore } from \"eztore\"\nimport useItemUpdater from \"hooks/useItemUpdater\"\n\nfunction useLogic() {\n    const [filter] = useStore(\"filter\")\n    const [items] = useStore(\"items\")\n    const [filteredItems, setFilteredItems] = useState([])\n    const { addItem } = useItemUpdater()\n\n    useEffect(() => {\n        const regExp = new RegExp(filter.name, \"i\")\n        const filteredItems = Object.values(items).reduce((acc, item) => {\n            if (item.name.match(regExp)) return [...acc, item]\n            return acc\n        }, [])\n\n        setFilteredItems(filteredItems)\n    }, [items, filter])\n\n    const updateStock = useCallback(event => {\n        const item = items[event.currentTarget.getAttribute(\"name\")]\n        addItem({ ...item, inStock: !item.inStock })\n    }, [items, addItem])\n\n    return { items: filteredItems, updateStock }\n}\n\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        paddingTop: 0,\n        flex: 1,\n        overflow: \"auto\",\n    },\n}))","import React from \"react\"\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton } from \"@material-ui/core\"\nimport { MoreVert } from \"@material-ui/icons\"\nimport useLogic from \"./useLogic\"\nimport useStyles from \"./useStyles\"\n\nconst ShopList = React.memo(() => {\n    const classes = useStyles()\n    const { items, updateStock } = useLogic()\n\n    return (\n        <List className={classes.root}>\n            {items.map(item => (\n                <ListItem\n                    button\n                    key={item.id}\n                    name={item.id}\n                    onClick={updateStock}>\n                    <Checkbox\n                        disableRipple\n                        checked={item.inStock} />\n                    <ListItemText primary={item.name} />\n                    <ListItemSecondaryAction>\n                        <IconButton>\n                            <MoreVert />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    )\n})\n\nexport default ShopList","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        margin: theme.spacing(2),\n        padding: theme.spacing(1),\n    },\n    input: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    addIcon: {\n        padding: theme.spacing(0),\n    },\n    menuIcon: {\n        padding: theme.spacing(1)\n    }\n}))","function createItem({ name }) {\n    return {\n        id: name.toLowerCase(),\n        name,\n        inStock: false,\n    }\n}\n\nexport default createItem","import { useCallback } from \"react\"\nimport { useStore } from \"eztore\"\nimport useItempUpdater from \"hooks/useItemUpdater\"\nimport createItem from \"models/Item\"\n\nfunction useLogic() {\n    const [filter, setFilter] = useStore(\"filter\")\n    const { addItem } = useItempUpdater()\n    const toggleOpen = useStore(\"isDrawerOpen\", true)\n\n    const updateFilter = useCallback(event => {\n        setFilter({ name: event.target.value })\n    }, [setFilter])\n\n    const updateItem = useCallback(() => {\n        addItem(createItem({ name: filter.name }))\n        setFilter({ name: \"\" })\n    }, [setFilter, addItem, filter])\n\n    return { filter, updateFilter, addItem: updateItem, toggleOpen }\n}\n\nexport default useLogic","import React from \"react\"\nimport { Paper, InputBase, IconButton } from \"@material-ui/core\"\nimport { Menu, AddCircle } from \"@material-ui/icons\"\nimport useStyles from \"./useStyles\"\nimport useLogic from \"./useLogic\"\n\nconst Input = React.memo(() => {\n    const classes = useStyles()\n    const { filter, updateFilter, addItem, toggleOpen } = useLogic()\n    const { name } = filter\n\n    return (\n        <Paper className={classes.root}>\n            <IconButton className={classes.menuIcon} onClick={toggleOpen}>\n                <Menu />\n            </IconButton>\n            <InputBase\n                value={name}\n                onChange={updateFilter}\n                className={classes.input}\n                placeholder=\"Producto\" />\n            <IconButton onClick={addItem} disabled={!name} className={classes.addIcon}>\n                <AddCircle fontSize=\"large\" />\n            </IconButton>\n        </Paper>\n    )\n})\n\nexport default Input","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    title: {\n        padding: theme.spacing(2),\n    },\n}))","import React from \"react\"\nimport { Drawer, List, ListItem, ListItemText, ListItemIcon, Typography, Divider } from \"@material-ui/core\"\nimport { Edit } from \"@material-ui/icons\"\nimport { useStore } from \"eztore\"\nimport useStyles from \"./useStyles\"\n\nconst MenuDrawer = React.memo(() => {\n    const [isOpen, toggleOpen] = useStore(\"isDrawerOpen\")\n    const classes = useStyles()\n\n    return (\n        <Drawer open={isOpen} onClose={() => toggleOpen()}>\n            <Typography variant=\"h6\" className={classes.title}>Shop List</Typography>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon><Edit /></ListItemIcon>\n                    <ListItemText primary=\"Test\" />\n                </ListItem>\n            </List>\n        </Drawer>\n    )\n})\n\nexport default MenuDrawer","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        ...theme.typography.body1,\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    }\n}))","import { useEffect } from \"react\"\nimport { useStore } from \"eztore\"\nimport database from \"libraries/database\"\n\nfunction useLogic() {\n    const dispatchItems = useStore(\"items\", true)\n\n    useEffect(() => {\n        async function initialize() {\n            const items = await database.items.toArray()\n            dispatchItems({ action: \"set\", payload: items })\n        }\n\n        initialize()\n    }, [dispatchItems])\n}\n\nexport default useLogic","import React from \"react\"\nimport Voice from \"components/Voice\"\nimport ShopList from \"components/ShopList\"\nimport Input from \"components/Input\"\nimport MenuDrawer from \"components/MenuDrawer\"\nimport useStyles from \"./useStyles\"\nimport useLogic from \"./useLogic\"\n\nconst Dashboard = React.memo(() => {\n    const classes = useStyles()\n    useLogic()\n\n    return (\n        <div className={classes.root}>\n            <MenuDrawer />\n            <Input />\n            <ShopList />\n            <Voice />\n        </div>\n    )\n})\n\nexport default Dashboard","import React from \"react\"\nimport { createMuiTheme, MuiThemeProvider, CssBaseline } from \"@material-ui/core\"\nimport { Store } from \"eztore\"\nimport reducers from \"reducers\"\nimport Dashboard from \"components/Dashboard\"\n\nconst theme = createMuiTheme({\n    spacing: factor => `${0.5 * factor}rem`,\n})\n\nconst App = () => (\n    <Store reducers={reducers}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Dashboard />\n        </MuiThemeProvider>\n    </Store>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.register()"],"sourceRoot":""}