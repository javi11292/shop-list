{"version":3,"sources":["reducers/index.js","components/Voice/useStyles.js","components/Voice/index.js","libraries/database.js","hooks/useItemUpdater.js","components/ShopList/useLogic.js","components/ShopList/useStyles.js","components/ShopList/index.js","components/Input/useStyles.js","models/Item.js","components/Input/useLogic.js","components/Input/index.js","components/MenuDrawer/useStyles.js","components/MenuDrawer/useLogic.js","components/MenuDrawer/index.js","components/Dashboard/useStyles.js","components/Dashboard/useLogic.js","components/Dashboard/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["items","state","reducer","value","action","payload","Array","reduce","acc","item","id","filter","name","isBuying","isDrawerOpen","makeStyles","theme","root","display","alignItems","button","margin","spacing","marginLeft","Voice","React","memo","classes","useStyles","className","Fab","size","Mic","database","Dexie","version","stores","settings","useLogic","dispatchItems","useStore","addItem","useCallback","put","deleteItem","delete","setFilter","useState","filteredItems","setFilteredItems","useItemUpdater","anchor","setAnchor","useEffect","length","regExp","RegExp","Object","values","match","inStock","sort","a","b","localeCompare","updateStock","event","currentTarget","getAttribute","openMenu","closeMenu","removeItem","paddingTop","flex","overflow","ShopList","Fragment","Menu","anchorEl","onClose","open","MenuItem","onClick","List","map","ListItem","key","Checkbox","color","disableRipple","checked","ListItemText","primary","ListItemSecondaryAction","IconButton","MoreVert","padding","input","marginRight","addIcon","menuIcon","createItem","toLowerCase","useItempUpdater","toggleOpen","updateFilter","target","updateItem","handleKeyDown","Input","Paper","InputBase","onKeyDown","onChange","placeholder","disabled","AddCircle","fontSize","title","paddingRight","isOpen","toggleBuying","MenuDrawer","Drawer","Typography","variant","Divider","typography","body1","position","height","width","flexDirection","toArray","initialize","Dashboard","createMuiTheme","factor","App","reducers","MuiThemeProvider","CssBaseline","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40777a3a.chunk.js","sourcesContent":["function itemsReducer(state, value) {\n    const { action, payload } = value\n    switch (action) {\n        case \"set\": {\n            if (payload instanceof Array) {\n                const items = payload.reduce((acc, item) => {\n                    return { ...acc, [item.id]: item }\n                }, state)\n                return items\n            } else return { ...state, [payload.id]: payload }\n        }\n        case \"unset\": {\n            const { [payload.id]: deleted, ...updatedState } = state\n            return updatedState\n        }\n        default:\n            return state\n    }\n}\n\nexport default {\n    items: {\n        state: {},\n        reducer: itemsReducer,\n    },\n    filter: {\n        state: { name: \"\" , isBuying: false},\n        reducer: (state, value) => ({ ...state, ...value })\n    },\n    isDrawerOpen: {\n        state: false,\n        reducer: state => !state\n    },\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: theme.spacing(2),\n        marginLeft: \"auto\",\n    },\n}))","import React from \"react\"\nimport { Fab } from \"@material-ui/core\"\nimport { Mic } from \"@material-ui/icons\"\nimport useStyles from \"./useStyles\"\n\nconst Voice = React.memo(() => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Fab className={classes.button} size=\"medium\">\n                <Mic />\n            </Fab>\n        </div>\n    )\n})\n\nexport default Voice","import Dexie from \"dexie\"\n\nconst database = new Dexie(\"Database\")\ndatabase.version(1).stores({\n    items: \"id\",\n    settings: \"id\",\n})\n\nexport default database\n","import { useCallback } from \"react\"\nimport { useStore } from \"eztore\"\nimport database from \"libraries/database\"\n\nfunction useLogic() {\n    const dispatchItems = useStore(\"items\", true)\n\n    const addItem = useCallback(item => {\n        database.items.put(item)\n        dispatchItems({ action: \"set\", payload: item })\n    }, [dispatchItems])\n\n    const deleteItem = useCallback(item => {\n        database.items.delete(item.id)\n        dispatchItems({ action: \"unset\", payload: item })\n    }, [dispatchItems])\n\n    return { addItem, deleteItem }\n}\n\nexport default useLogic","import { useEffect, useCallback, useState } from \"react\"\nimport { useStore } from \"eztore\"\nimport useItemUpdater from \"hooks/useItemUpdater\"\n\nfunction useLogic() {\n    const [filter, setFilter] = useStore(\"filter\")\n    const [items] = useStore(\"items\")\n    const [filteredItems, setFilteredItems] = useState([])\n    const { addItem, deleteItem } = useItemUpdater()\n    const [anchor, setAnchor] = useState()\n\n    useEffect(() => {\n        if (!filteredItems.length) setFilter({ isBuying: false })\n    }, [filteredItems, setFilter])\n\n    useEffect(() => {\n        const regExp = new RegExp(filter.name, \"i\")\n        const filteredItems = Object.values(items).reduce((acc, item) => {\n            if (item.name.match(regExp) && (!filter.isBuying || !item.inStock)) return [...acc, item]\n            return acc\n        }, []).sort((a, b) => a.name.localeCompare(b.name))\n\n        setFilteredItems(filteredItems)\n    }, [items, filter])\n\n    const updateStock = useCallback(event => {\n        const item = items[event.currentTarget.getAttribute(\"name\")]\n        addItem({ ...item, inStock: !item.inStock })\n    }, [items, addItem])\n\n    const openMenu = useCallback(event => {\n        setAnchor(event.currentTarget)\n    }, [])\n\n    const closeMenu = useCallback(() => {\n        setAnchor()\n    }, [])\n\n    const removeItem = useCallback(() => {\n        if (!anchor) return\n        deleteItem(items[anchor.getAttribute(\"name\")])\n        closeMenu()\n    }, [deleteItem, items, anchor, closeMenu])\n\n    return { items: filteredItems, updateStock, openMenu, closeMenu, anchor, removeItem }\n}\n\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        paddingTop: 0,\n        flex: 1,\n        overflow: \"auto\",\n    },\n}))","import React from \"react\"\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, Menu, MenuItem } from \"@material-ui/core\"\nimport { MoreVert } from \"@material-ui/icons\"\nimport useLogic from \"./useLogic\"\nimport useStyles from \"./useStyles\"\n\nconst ShopList = React.memo(() => {\n    const classes = useStyles()\n    const { items, updateStock, openMenu, closeMenu, anchor, removeItem } = useLogic()\n\n    return (\n        <React.Fragment>\n            <Menu\n                name=\"menu\"\n                anchorEl={anchor}\n                onClose={closeMenu}\n                open={!!anchor}>\n                <MenuItem onClick={removeItem}>Eliminar</MenuItem>\n            </Menu>\n            <List className={classes.root}>\n                {items.map(item => (\n                    <ListItem\n                        button\n                        key={item.id}\n                        name={item.id}\n                        onClick={updateStock}>\n                        <Checkbox\n                            color=\"primary\"\n                            disableRipple\n                            checked={item.inStock} />\n                        <ListItemText primary={item.name} />\n                        <ListItemSecondaryAction>\n                            <IconButton onClick={openMenu} name={item.id}>\n                                <MoreVert />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n        </React.Fragment>\n    )\n})\n\nexport default ShopList","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        margin: theme.spacing(2),\n        padding: theme.spacing(0.75),\n    },\n    input: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    addIcon: {\n        padding: theme.spacing(0),\n    },\n    menuIcon: {\n        padding: theme.spacing(1)\n    }\n}))","function createItem({ name }) {\n    return {\n        id: name.toLowerCase(),\n        name,\n        inStock: false,\n    }\n}\n\nexport default createItem","import { useCallback } from \"react\"\nimport { useStore } from \"eztore\"\nimport useItempUpdater from \"hooks/useItemUpdater\"\nimport createItem from \"models/Item\"\n\nfunction useLogic() {\n    const [filter, setFilter] = useStore(\"filter\")\n    const { addItem } = useItempUpdater()\n    const toggleOpen = useStore(\"isDrawerOpen\", true)\n\n    const updateFilter = useCallback(event => {\n        setFilter({ name: event.target.value })\n    }, [setFilter])\n\n    const updateItem = useCallback(() => {\n        if (!filter.name) return\n        addItem(createItem({ name: filter.name }))\n        setFilter({ name: \"\" })\n    }, [setFilter, addItem, filter])\n\n    const handleKeyDown = useCallback(event => {\n        if (event.key === \"Enter\") updateItem()\n    }, [updateItem])\n\n    return { filter, updateFilter, addItem: updateItem, toggleOpen, handleKeyDown }\n}\n\nexport default useLogic","import React from \"react\"\nimport { Paper, InputBase, IconButton } from \"@material-ui/core\"\nimport { Menu, AddCircle } from \"@material-ui/icons\"\nimport useStyles from \"./useStyles\"\nimport useLogic from \"./useLogic\"\n\nconst Input = React.memo(() => {\n    const classes = useStyles()\n    const { filter, updateFilter, addItem, toggleOpen, handleKeyDown } = useLogic()\n    const { name } = filter\n\n    return (\n        <Paper className={classes.root}>\n            <IconButton className={classes.menuIcon} onClick={toggleOpen}>\n                <Menu />\n            </IconButton>\n            <InputBase\n                value={name}\n                onKeyDown={handleKeyDown}\n                onChange={updateFilter}\n                className={classes.input}\n                placeholder=\"Producto\" />\n            <IconButton onClick={addItem} disabled={!name} className={classes.addIcon}>\n                <AddCircle fontSize=\"large\" />\n            </IconButton>\n        </Paper>\n    )\n})\n\nexport default Input","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    title: {\n        padding: theme.spacing(2),\n    },\n    item: {\n        paddingRight: theme.spacing(10)\n    }\n}))","import { useCallback } from \"react\"\nimport { useStore } from \"eztore\"\n\nfunction useLogic() {\n    const [filter, setFilter] = useStore(\"filter\")\n    const [isOpen, toggleOpen] = useStore(\"isDrawerOpen\")\n\n    const toggleBuying = useCallback(() => {\n        toggleOpen()\n        setFilter({ isBuying: !filter.isBuying })\n    }, [setFilter, toggleOpen, filter])\n\n    return { toggleBuying, isOpen, toggleOpen, isBuying: filter.isBuying }\n}\n\nexport default useLogic","import React from \"react\"\nimport { Drawer, List, ListItem, ListItemText, Typography, Divider } from \"@material-ui/core\"\nimport useStyles from \"./useStyles\"\nimport useLogic from \"./useLogic\"\n\nconst MenuDrawer = React.memo(() => {\n    const classes = useStyles()\n    const { isOpen, toggleOpen, toggleBuying, isBuying } = useLogic()\n\n    return (\n        <Drawer open={isOpen} onClose={() => toggleOpen()}>\n            <Typography variant=\"h6\" className={classes.title}>Shop List</Typography>\n            <Divider />\n            <List>\n                <ListItem button\n                    className={classes.item}\n                    onClick={toggleBuying}>\n                    <ListItemText primary={`${!isBuying ? \"Empezar\" : \"Terminar\"} compra`} />\n                </ListItem>\n            </List>\n        </Drawer>\n    )\n})\n\nexport default MenuDrawer","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        ...theme.typography.body1,\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    }\n}))","import { useEffect } from \"react\"\nimport { useStore } from \"eztore\"\nimport database from \"libraries/database\"\n\nfunction useLogic() {\n    const dispatchItems = useStore(\"items\", true)\n\n    useEffect(() => {\n        async function initialize() {\n            const items = await database.items.toArray()\n            dispatchItems({ action: \"set\", payload: items })\n        }\n\n        initialize()\n    }, [dispatchItems])\n}\n\nexport default useLogic","import React from \"react\"\nimport Voice from \"components/Voice\"\nimport ShopList from \"components/ShopList\"\nimport Input from \"components/Input\"\nimport MenuDrawer from \"components/MenuDrawer\"\nimport useStyles from \"./useStyles\"\nimport useLogic from \"./useLogic\"\n\nconst Dashboard = React.memo(() => {\n    const classes = useStyles()\n    useLogic()\n\n    return (\n        <div className={classes.root}>\n            <MenuDrawer />\n            <Input />\n            <ShopList />\n            <Voice />\n        </div>\n    )\n})\n\nexport default Dashboard","import React from \"react\"\nimport { createMuiTheme, MuiThemeProvider, CssBaseline } from \"@material-ui/core\"\nimport { Store } from \"eztore\"\nimport reducers from \"reducers\"\nimport Dashboard from \"components/Dashboard\"\n\nconst theme = createMuiTheme({\n    spacing: factor => `${0.5 * factor}rem`,\n})\n\nconst App = () => (\n    <Store reducers={reducers}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Dashboard />\n        </MuiThemeProvider>\n    </Store>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.unregister()"],"sourceRoot":""}